<?xml version="1.0" encoding="UTF-8" ?>
<!--
    对于配置文件：如果配置文件 logback-test.xml 和 spring-logback.xml 都不存在，那么 logback 默认地会调用BasicConfigurator，
    创建一个最小化配置。最小化配置由一个关联到根 logger 的ConsoleAppender 组成。
    输出用模式为%d{HH:mm:ss.SSS} [%thread] %-5level %logger{200} - %msg%n 的 PatternLayoutEncoder 进行格式化，logger{200} 表示该字段压缩为 200个长度显示
    root logger 默认级别是 DEBUG。
    scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
    scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
    debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <!-- 用来定义变量值的标签，<property> 有两个属性，name和value；其中name的值是变量的名称，value的值时变量定义的值。通过<property>定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。 -->
    <!-- <property name="LOG_PATH" value="logs"/> -->
    <!-- key: 标识此timestamp的名字; datePattern: 设置将当前时间（解析配置文件的时间）转换为字符串的模式，遵循java.txt.SimpleDateFormat的格式。 -->
    <!-- <timestamp key="bySecond" datePattern="yyyyMMdd'T'HHmmss"/> -->

    <!-- 每个logger都关联到logger上下文，默认上下文名称为“default”。但可以使用<contextName>设置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改。 -->
    <!-- <contextName>${APP_Name}</contextName> -->

    <!-- 子节点appender：负责写日志的组件，它有两个必要属性name和class。name指定appender名称，class指定appender的全限定名 -->
    <!-- 控制台输出日志 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%black %red(%d{yyyy-MM-dd HH:mm:ss}) %green([%thread]) %highlight(%-5level) %green(%X{RequestId}) %boldMagenta(%logger{}) - %cyan(%msg%n)
            </pattern>
        </encoder>
    </appender>


    <logger name="com.baomidou" level="DEBUG" />
    <logger name="com.lin.mapper" level="DEBUG" />
    <logger name="org.springframework.web" level="DEBUG" />
    <logger name="org.springframework.data" level="DEBUG" />
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <!--<appender-ref ref="DEBUG" /> -->
        <!--<appender-ref ref="INFO" />  -->
        <!--<appender-ref ref="ERROR" /> -->
        <!--<appender-ref ref="WARN" />  -->
    </root>
</configuration>